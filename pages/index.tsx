import type { GetServerSideProps, NextPage } from 'next'
import Head from 'next/head'
import React, { useEffect } from 'react'
import { ClientDTO, fetchClients } from '../src/api/base'
import { SkeletonLoadingList } from '../src/components/SkeletonLoadingList/SkeletonLoadingList'
import { AsyncState, useAsync } from '../src/hooks/useAsync'


interface MyFooterProps {
  companyName?: string
}

export const MyFooter = (props: MyFooterProps) => {
    return (
        <footer>
            Powered by {' '} {props.companyName ?? "Toptal"}
        </footer>
    )
}

const Home: NextPage<{ clients: ClientDTO[] | undefined}> = (props) => {

    
    const { status, data, error, execute } = useAsync(
        fetchClients
    )

    useEffect(() => {
        execute(undefined)
    }, [execute])

    console.log("rendeirng Home", data)

    return (
        <div>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main>
                <h2>FROM THE SERVER</h2>
                {
                    props.clients?.map((client) => {
                        return (
                            <div key={client.id}>
                                {client.name}
                            </div>
                        )
                    })
                }

                <h2>
                    From fetch after mount 
                </h2>


                {
                    status === AsyncState.PENDING ? (
                        <SkeletonLoadingList />
                    ) : null
                }

                {
                    (status === AsyncState.SUCCESS && data?.length === 0) ? (
                        <div>CTA to add clients</div>
                    ) : null
                }

                {
                    data?.map((client) => {
                        return (
                            <div key={client.id}>
                                {client.name}
                            </div>
                        )
                    })
                }

                {/* <Button variant="contained">Hello</Button> */}

            </main>

            {/* <MyFooter /> */}
        </div>
    )
}

export const getServerSideProps: GetServerSideProps = async (ctx) => {
    const clients = await fetchClients()
    
    return {
        props: {
            clients: clients
        }
    }
}

export default Home
